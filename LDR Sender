#include <SPI.h>
#include <LoRa.h>
int relay = 26;
volatile byte relayState = LOW;

#define DO_PIN 13  // ESP32's pin GPIO13 connected to DO pin of the ldr module
// Timer Variables
long lastDebounceTime = 0;  
long debounceDelay = 1000;
//define the pins used by the transceiver module
#define ss 5
#define rst 14
#define dio0 2

int counter = 0;

void setup() {
  //initialize Serial Monitor
  Serial.begin(115200);
   pinMode(relay, OUTPUT);
  digitalWrite(relay, HIGH);
  pinMode(DO_PIN, INPUT);
  //pinMode(35, OUTPUT);
   attachInterrupt(digitalPinToInterrupt(13), detectMotion, RISING);
  // Serial communication for debugging purposes
  while (!Serial);
  Serial.println("LoRa Sender");

  //setup LoRa transceiver module
  LoRa.setPins(ss, rst, dio0);
  
  //replace the LoRa.begin(---E-) argument with your location's frequency 
  //433E6 for Asia
  //866E6 for Europe
  //915E6 for North America
  while (!LoRa.begin(868E6)) {
    Serial.println(".");
    delay(500);
  }
   // Change sync word (0xF3) to match the receiver
  // The sync word assures you don't get LoRa messages from other LoRa transceivers
  // ranges from 0-0xFF
  LoRa.setSyncWord(0xF3);
  Serial.println("LoRa Initializing OK!");
}

void loop() {
  Serial.print("Sending packet: ");
  Serial.println(counter);

  //Send LoRa packet to receiver
  LoRa.beginPacket();
  int lightState = digitalRead(DO_PIN);
if((millis() - lastDebounceTime) > debounceDelay && relayState == LOW){
    digitalWrite(relay, LOW);
    relayState = HIGH;
   Serial.println("ON");
   LoRa.println("ON");
  }
  delay(50);
  }
  void detectMotion() {
  Serial.println("Motion");
  LoRa.println("Motion");
  if(relayState == HIGH){
    digitalWrite(relay, HIGH);
  }
  relayState = LOW;  
  Serial.println("OFF");
  LoRa.println("OFF");
  lastDebounceTime = millis();
  LoRa.print(counter);
  LoRa.endPacket();

  counter++;

  delay(1000);
}
