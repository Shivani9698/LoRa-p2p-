#include <SPI.h>
#include <LoRa.h>

//define the pins used by the transceiver module
#define ss 5
#define rst 14
#define dio0 2
#define ADC_VREF_mV    3300.0 // in millivolt
#define ADC_RESOLUTION 4096.0
#define PIN_LM35       26 // ESP32 pin GPIO36 (ADC0) connected to LM35

int counter = 0;

void setup() {
  //initialize Serial Monitor
  Serial.begin(115200);
  while (!Serial);
  Serial.println("LoRa Sender");

  //setup LoRa transceiver module
  LoRa.setPins(ss, rst, dio0);
  
  //replace the LoRa.begin(---E-) argument with your location's frequency 
  //433E6 for Asia
  //866E6 for Europe
  //915E6 for North America
  while (!LoRa.begin(868E6)) {
    Serial.println(".");
    delay(500);
  }
   // Change sync word (0xF3) to match the receiver
  // The sync word assures you don't get LoRa messages from other LoRa transceivers
  // ranges from 0-0xFF
  LoRa.setSyncWord(0xF3);
  Serial.println("LoRa Initializing OK!");
}

void loop() {
   int adcVal = analogRead(PIN_LM35);
  // convert the ADC value to voltage in millivolt
  float milliVolt = adcVal * (ADC_VREF_mV / ADC_RESOLUTION);
  // convert the voltage to the temperature in °C
  float tempC = milliVolt / 10;
  // convert the °C to °F
  float tempF = tempC * 9 / 5 + 32;

  Serial.print("Sending packet: ");
  Serial.println(counter);

  //Send LoRa packet to receiver
  LoRa.beginPacket();
   Serial.print("Temperature: ");
   LoRa.print("Temperature: ");
  Serial.print(tempC);   // print the temperature in °C
  LoRa.print(tempC);   // print the temperature in °C
  Serial.print("°C");
  LoRa.print("°C");
  Serial.print("  ~  "); // separator between °C and °F
  LoRa.print("  ~  ");
  Serial.print(tempF);   // print the temperature in °F
  LoRa.print(tempF); 
  Serial.println("°F");
  LoRa.println("°F");

  delay(500);
  LoRa.print(counter);
  LoRa.endPacket();

  counter++;

  delay(1000);
}
