#include <SPI.h>
#include <LoRa.h>
#include "DHT.h"


//define the pins used by the transceiver module
#define ss 5
#define rst 14
#define dio0 2

#define DHTPIN 13    // what pin we're connected to

// Uncomment whatever type you're using!
#define DHTTYPE DHT11   // DHT 11 // madam tmhre pss dht11 hnn sir blue colur wala h sir
//#define DHTTYPE DHT22   // DHT 22  (AM2302)
//#define DHTTYPE DHT21   // DHT 21 (AM2301)

// Initialize DHT sensor for normal 16mhz Arduino
DHT dht(DHTPIN, DHTTYPE);


int counter = 0;

void setup() {
  //initialize Serial Monitor
  Serial.begin(115200);
  while (!Serial);
  Serial.println("LoRa Sender");

  //setup LoRa transceiver module
  LoRa.setPins(ss, rst, dio0);
  
  //replace the LoRa.begin(---E-) argument with your location's frequency 
  //433E6 for Asia
  //866E6 for Europe
  //915E6 for North America
  while (!LoRa.begin(868E6)) {
    Serial.println(".");
    delay(500);
  }// Sender connect kro
   // Change sync word (0xF3) to match the receiver
  // The sync word assures you don't get LoRa messages from other LoRa transceivers
  // ranges from 0-0xFF
  LoRa.setSyncWord(0xF3);
  Serial.println("LoRa Initializing OK!");
   Serial.println("DHTxx test!");
 
  dht.begin();
}

void loop() {
  
 

  Serial.print("Sending packet: ");
  Serial.println(counter);
float h = dht.readHumidity();
  // Read temperature as Celsius
  float t = dht.readTemperature();
  // Read temperature as Fahrenheit
  float f = dht.readTemperature(true);
  
  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }
 Serial.print("Humidity: "); 
  Serial.print(h);
  Serial.println(" %\t");
  Serial.print("Temperature: "); 
  Serial.print(t);
  Serial.println(" *C ");
// 
//  float hi = dht.computeHeatIndex(f, h);
//  //Send LoRa packet to receiver
  LoRa.beginPacket();
//  LoRa.print("hello ");
//  LoRa.print(counter);

  LoRa.print("Temperature: ");
  LoRa.print(t);
   LoRa.print("   &&  ");
  LoRa.print("Humidity: ");
  LoRa.print(h  );
  LoRa.print(  counter);

  LoRa.endPacket();

  counter++;
  

  delay(1000);
}
